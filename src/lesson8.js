if (!("a" in window)) {
    var a = 1;
}
alert(a);
// undefined
//интерпретатор сначала читает код (получает a в Window). 
//Затем выполняет код. значение не присвоено, a = undefind, т.к. условие не выполнено.


var b = function a(x) { // по имени «a» функцию видно только здесь
    x && a(--x);
};
alert(a);
// undefined
// имя функции(a) в функциональном выражении доступно только изнутри самой функции


function a(x) {
    return x * 2;
}
var a;
alert(a);
//флерт выведет текст функции:
/* function a(x) {
    return x * 2;
}*/
// var просто переинициализирует переменную а


function b(x, y, a) {
    arguments[2] = 10;
    alert(a);
}
b(1, 2, 3);
// 10 - в старом стандарте
// 3 -  в вовом
// a и arguments[2] — это ссылка на одно и то же значение
// в новом стандарте значение аргумента нельзя изменить


function a() {
    alert(this);
}
a.call(null);
//[object Window] -  в старом стандарте
// ull  в новом
// метод call объекта Function вызывает функцию к текущему объекту 
